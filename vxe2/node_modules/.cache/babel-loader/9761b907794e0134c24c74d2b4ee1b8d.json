{"ast":null,"code":"var _jsxFileName = \"/Users/rdowler/Documents/myScripts/apps/vxe-tests/vxe2/src/Components/Journals/modals/token-modal.js\";\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport \"../css/journals-main.css\";\n\nclass TokenModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openModal: false\n    };\n    this.modalClose = this.modalClose.bind(this);\n    this.showModal = this.showModal.bind(this);\n  }\n\n  modalClose() {\n    this.setState({\n      openModal: false\n    });\n  }\n\n  showModal() {\n    setTimeout(() => {\n      // Unauthorised Modal only appears after 2 seconds now \n      this.setState({\n        openModal: true\n      });\n    }, 2000);\n  }\n\n  componentDidMount() {\n    this.showModal();\n  }\n\n  render() {\n    const {\n      openModal\n    } = this.state;\n    let closeTooltip = /*#__PURE__*/React.createElement(Tooltip, {\n      className: 'closetooltip',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 28\n      }\n    }, \"Close\");\n    return /*#__PURE__*/React.createElement(Modal, {\n      className: \"token-modal\",\n      show: openModal,\n      onHide: this.modalClose,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      id: \"token-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"top\",\n      overlay: closeTooltip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      onClick: this.modalClose,\n      \"aria-label\": \"Close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, \"close\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '150px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"material-icons\",\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \"warning\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, this.props.modalHeader), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, this.props.modalBody), this.props.modalBody2 && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, this.props.modalBody2))));\n  }\n\n}\n\nexport default TokenModal;","map":{"version":3,"sources":["/Users/rdowler/Documents/myScripts/apps/vxe-tests/vxe2/src/Components/Journals/modals/token-modal.js"],"names":["React","Modal","OverlayTrigger","Tooltip","TokenModal","Component","constructor","props","state","openModal","modalClose","bind","showModal","setState","setTimeout","componentDidMount","render","closeTooltip","display","justifyContent","alignItems","height","color","modalHeader","modalBody","modalBody2"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip'; \nimport \"../css/journals-main.css\";\n\nclass TokenModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {    \n            openModal: false,\n        };\n\n        this.modalClose = this.modalClose.bind(this);\n        this.showModal = this.showModal.bind(this);\n    }\n\n    modalClose(){\n        this.setState({openModal: false});\n    }\n\n    showModal(){\n        setTimeout(\n            ()=>{\n                // Unauthorised Modal only appears after 2 seconds now \n                this.setState({openModal: true});\n            }\n        , 2000);\n    }\n    \n    componentDidMount(){\n        this.showModal();\n    }\n\n    render() {    \n        const {openModal} = this.state;\n        let closeTooltip = <Tooltip className={'closetooltip'}>Close</Tooltip>;\n        return (\n            <Modal \n                className=\"token-modal\"\n                show={openModal} \n                onHide={this.modalClose}                                 \n                size='lg'\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                id=\"token-modal\"\n                >\n                <Modal.Body>\n                    <OverlayTrigger placement=\"top\" overlay={closeTooltip}>\n                        <button type=\"button\" className=\"close\" onClick={this.modalClose} aria-label=\"Close\">\n                            <i className=\"material-icons\">close</i>\n                        </button>                                           \n                    </OverlayTrigger>\n                    <div style={{display:'flex', justifyContent:'center', alignItems:'center', height:'150px'}}>\n                        <span class=\"material-icons\" style={{color: \"red\"}}>warning</span>\n                        <h2>{this.props.modalHeader}</h2>\n                        <span>{this.props.modalBody}</span> \n                        {this.props.modalBody2 &&\n                        <span>{this.props.modalBody2}</span>}                       \n                    </div>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n\nexport default TokenModal;\n"]},"metadata":{},"sourceType":"module"}